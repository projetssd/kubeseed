##################################################
# Exemple de fichier pour ajouter une nouvelle
# application
##################################################
# A déposer dans le dossier "containers"
##################################################
---
application: 'nom_appli'            # Nom de l'application, doit correspondre au nom de fichier
app_port: 8080                      # port de la webui - doit être un entier, sans les quotes !
description: "Une description courte de l'application" # sera utilisé dans whiptail, une seule ligne
image: 'repo/image:latest'          # image docker de l'application
application_volumes:                # liste de volumes à monter
  # chaque élément commence par un tiret
  # On doit avoir un local_path (chemin sur l'hôte)
  # et on container_path (chemin sur le container)
  - local_path: "{{ settings.storage }}/docker/{{application}}/config"
    container_path: "/config"
  - local_path: "{{ settings.storage }}/docker/{{application}}/data"
    container_path: "/data"
  - local_path: "{{ lookup('env','HOME') }}"
    container_path: "{{ lookup('env','HOME') }}"

application_env:                     # Variables d'environnement du container
  # chaque élément commence par un tiret
  # on doit avoir name (nom de la variable)
  # et value (nom de la variable)
  - name: UID
    value: '{{user.userid}}'
  - name: GID
    value: '{{user.groupid}}'
  - name: TZ
    value: 'Europe/Paris'

############# OPTIONS ###################################
# A partir d'ici, tout est optionnel

no_liveness: true # Si positionné à true, ne mettra pas de check du liveness
# Utile pour certaines applications (plex, on te regarde...)

#specific_container_info:
  # Liste des ports à ouvrir en direct sur l'hôte
  # Correspond à ports: -3000:3000 dans docker
  # C'est une liste, donc chaque élément doit avoir un tiret
  # seuls les ports 30000-32767 sont utilisables dans k3s
  # CE N'EST PAS LE PORT DE LA WEBUI DU SERVICE !
#  ports:
#    - 30000

# liste des pretasks (lancées avant le déploiement)
# Doit correspondre a un fichier yml dans le répertoire containers/tasks
#pretasks:
#  - first_pretask

# liste des posttasks (lancées après le déploiement)
# Doit correspondre a un fichier yml dans le répertoire containers/tasks
#posttasks:
#  - configure_rutorrent
#  - restart

