---
- hosts: localhost
  gather_facts: false
  vars:
    application: traefik

  tasks:
  - name: Create ClusterIP service
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kube-system
      name: traefik-dashboard
      kind: Service
      definition:
        metadata:
          labels:
            app.kubernetes.io/instance: traefik
            app.kubernetes.io/name: traefik-dashboard
        spec:
          type: ClusterIP
          ports:
            - name: traefik
              port: 9000
              targetPort: traefik
              protocol: TCP
          selector:
            app.kubernetes.io/instance: traefik
            app.kubernetes.io/name: traefik

#  - name: set middleware
#    include_tasks: "{{ settings.source }}/includes/playbooks/tasks/set_middleware.yml"

  - name: Create Ingress rule
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      name: traefik-ingressroute
      namespace: kube-system
      kind: IngressRoute
      definition:
        apiVersion: traefik.containo.us/v1alpha1
        spec:
          entryPoints:
            - websecure
          routes:
            - match: "Host(`{{ applis.traefik.domain }}.{{ user.domain }}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
              kind: Rule
              services:
                - name: api@internal
                  kind: TraefikService
              middlewares:
                - name: my-basic-auth
