---
- hosts: localhost
  gather_facts: false
  vars:
    application: traefik

  tasks:
  - name: Create ClusterIP service
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kube-system
      name: traefik-dashboard
      kind: Service
      definition:
        metadata:
          labels:
            app.kubernetes.io/instance: traefik
            app.kubernetes.io/name: traefik-dashboard
        spec:
          type: ClusterIP
          ports:
            - name: traefik
              port: 9000
              targetPort: traefik
              protocol: TCP
          selector:
            app.kubernetes.io/instance: traefik
            app.kubernetes.io/name: traefik

  - name: Create certificate
    kubernetes.core.k8s:
      api_version: cert-manager.io/v1
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      kind: Certificate
      name: "{{ applis.traefik.subdomain }}.{{ user.domain }}"
      namespace: kube-system
      definition:
        spec:
          dnsNames:
            - "{{ applis.traefik.subdomain }}.{{ user.domain }}"
          secretName: "{{ applis.traefik.subdomain }}.{{ user.domain }}"
          issuerRef:
            name: letsencrypt-prod
            kind: ClusterIssuer

  - name: "Launch traefik - Ingress "
    kubernetes.core.k8s:
      api_version: networking.k8s.io/v1
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      kind: Ingress
      namespace: kube-system
      name: "ing-traefik"
      definition:
        metadata:
          labels:
            ksapp: "traefik"
            app: "traefik"
          annotations:
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.middlewares: "my-basic-auth"
            cert-manager.io/cluster-issuer: letsencrypt-prod
        spec:
          rules:
            - host: "{{ applis.traefik.subdomain }}.{{ user.domain }}"
              http:
                paths:
                  - pathType: Prefix
                    path: "/"
                    backend:
                      service:
                        name: "traefik-dashboard"
                        port:
                          number: 9000
          tls:
            - secretName: "traefik-tls"
              hosts:
                - "{{ applis.traefik.subdomain }}.{{ user.domain }}"