---
- hosts: localhost
  gather_facts: false
    
  tasks:
  - name: Create admin user
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      name: admin-user
      definition:
        name: admin-user
        api_version: v1
        kind: ServiceAccount
        namespace: kubernetes-dashboard

  - name: Create admin user role
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: admin-user
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
          - kind: ServiceAccount
            name: admin-user
            namespace: kubernetes-dashboard

  - name: Create Server transport
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      name: mytransport
      kind: ServersTransport
      definition:
        serverName: "dashboard.{{ user.domain }}"
        insecureSkipVerify: true
        apiVersion: traefik.containo.us/v1alpha1


  - name: Create IngressRoute
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      kind: IngressRoute
      name: kubernetes-dashboard-ingress
      namespace: kubernetes-dashboard
      definition:
        entryPoints:
          - web
          - websecure
        apiVersion: traefik.containo.us/v1alpha1
        routes:
          - match: "host(`dashboard.{{ user.domain }}`)"
            kind: Rule
            services:
              - name: kubernetes-dashboard
                port: 443
                serversTransport: mytransport




