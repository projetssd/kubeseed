---
- hosts: localhost
  gather_facts: false
  tasks:
  - name: Create admin user
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      name: admin-user
      definition:
        name: admin-user
        api_version: v1
        kind: ServiceAccount
        namespace: kubernetes-dashboard

  - name: Create admin user role
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: admin-user
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
          - kind: ServiceAccount
            name: admin-user
            namespace: kubernetes-dashboard

  - name: Create certificate
    kubernetes.core.k8s:
      api_version: cert-manager.io/v1
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      kind: Certificate
      name: "{{ applis.dashboard.domain }}.{{ user.domain }}"
      namespace: kube-system
      definition:
        spec:
          dnsNames:
            - "{{ applis.dashboard.domain }}.{{ user.domain }}"
          secretName: "{{ applis.dashboard.domain }}.{{ user.domain }}"
          issuerRef:
            name: letsencrypt-prod
            kind: ClusterIssuer


  - name: Transport and Ingress template
    template:
      src: "{{ settings.source }}/includes/playbooks/templates/dashboard-ingress.yml.j2"
      dest: "/tmp/dash.yml"

  - name: Create Server transport
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      src: "/tmp/dash.yml"

  - name: delete temp file
    file:
      path: "/tmp/dash.yml"
      state: absent
