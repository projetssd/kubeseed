---
- hosts: localhost
  gather_facts: false
  vars:
    application: "prometheus"
  tasks:
    - name: Install prometheus repo
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus/prometheus
        release_namespace: kubeseed

    - name: "Set DNS Record on CloudFlare"
      include_tasks: "{{ settings.source }}/includes/playbooks/tasks/cloudflare_domain.yml"
      vars:
        subdomain: "{{  applis[application].subdomain }}"

    - name: set middleware
      set_fact:
        k3s_middlewares: default-redirect-https@kubernetescrd

    - name: modify middleware if basic auth
      set_fact:
        k3s_middlewares: kubeseed-my-basic-auth@kubernetescrd, default-redirect-https@kubernetescrd
      when: applis[application].auth == 1

    - name: modify middleware if oauth
      set_fact:
        k3s_middlewares: kubeseed-oauth@kubernetescrd, default-redirect-https@kubernetescrd
      when: applis[application].auth == 2

    # Lancement de l'ingress (r√®gle traefik)
    - name: "Launch {{ application }} - Ingress "
      kubernetes.core.k8s:
        api_version: networking.k8s.io/v1
        kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
        state: present
        kind: Ingress
        namespace: kubeseed
        name: "ing-{{ application }}"
        definition:
          metadata:
            labels:
              ksapp: "{{ application }}"
              app: "{{ application }}"
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.middlewares: "{{ k3s_middlewares }}"
              cert-manager.io/cluster-issuer: letsencrypt-prod
          spec:
            rules:
              - host: "{{ applis[application].subdomain }}.{{ user.domain }}"
                http:
                  paths:
                    - pathType: Prefix
                      path: "/"
                      backend:
                        service:
                          name: "prometheus-server"
                          port:
                            number: 80
            tls:
              - secretName: "{{ application }}-tls"
                hosts:
                  - "{{ applis[application].subdomain }}.{{ user.domain }}"