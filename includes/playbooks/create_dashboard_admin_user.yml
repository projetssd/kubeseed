---
- hosts: localhost
  gather_facts: false
    
  tasks:
  - name: Create admin user
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      name: admin-user
      definition:
        name: admin-user
        api_version: v1
        kind: ServiceAccount
        namespace: kubernetes-dashboard

  - name: Create admin user role
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      definition:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: admin-user
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cluster-admin
        subjects:
          - kind: ServiceAccount
            name: admin-user
            namespace: kubernetes-dashboard

  - name: Create Ingress for dashboard
    kubernetes.core.k8s:
      kubeconfig: "{{ settings.storage }}/k3s/k3s.yaml"
      state: present
      namespace: kubernetes-dashboard
      name: kubernetes-dashboard
      kind: Ingress
      definition:
        apiVersion: networking.k8s.io/v1
        metadata:
          labels:
            app: kubernetes-dashboard
          annotations:
            kubernetes.io/ingress.class: "traefik"
            traefik.ingress.kubernetes.io/router.entrypoints: web, websecure ## web not needed here.
            traefik.ingress.kubernetes.io/router.tls: "true"
        spec:
          rules:
            - host: "dashboard.{{ user.domain }}"
              http:
                paths:
                  - path: /
                    backend:
                      serviceName: kubernetes-dashboard
                      servicePort: 443